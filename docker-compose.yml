services:
  db:
    image: postgres:15
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-backend_development}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    command: bin/rails server -b 0.0.0.0 -p 3000
    volumes:
      - ./backend:/app:cached
    ports:
      - "${RAILS_PORT:-3001}:3000"
    env_file:
      - .env
    environment:
      - RAILS_PORT=${RAILS_PORT:-3001}
    depends_on:
      db:
        condition: service_healthy
  frontend:
    build: ./frontend/frontend
    command: pnpm dev -- --host
    volumes:
      - ./frontend/frontend:/app:cached
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    environment:
      # Set container PORT based on FRONTEND_PORT so the Vite server uses the same port
      - PORT=${FRONTEND_PORT:-5173}
      - HOST=0.0.0.0
      # On macOS/docker desktop, use host.docker.internal to reach services on the host
      - VITE_API_BASE=${VITE_API_BASE:-http://host.docker.internal:${RAILS_PORT:-3001}}
    depends_on:
      - backend
  redis:
    image: redis:7
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 10s
      timeout: 5s
      retries: 5

  sidekiq:
    build: ./backend
    command: bundle exec sidekiq -C config/sidekiq.yml
    volumes:
      - ./backend:/app:cached
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy

volumes:
  db-data:
  redis-data:
