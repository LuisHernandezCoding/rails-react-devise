name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    name: Backend (RSpec + RuboCop)
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: rails_devise_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'

      - name: Cache gems
        uses: actions/cache@v4
        with:
          path: backend/vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/backend/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install dependencies
        working-directory: ./backend
        run: |
          gem install bundler
          bundle config set --local path 'vendor/bundle'
          bundle install --jobs 4 --retry 3

      - name: Prepare DB
        working-directory: ./backend
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/rails_devise_test
        run: |
          cp config/database.yml.ci config/database.yml 2>/dev/null || true
          bundle exec rake db:create db:schema:load --trace || bundle exec rake db:create db:migrate --trace

      - name: Run RuboCop
        working-directory: ./backend
        run: bundle exec rubocop --parallel || true

      - name: Run RSpec
        working-directory: ./backend
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/rails_devise_test
        run: bundle exec rspec

      - name: bundler-audit (optional)
        if: always()
        working-directory: ./backend
        run: |
          if bundle list | grep bundler-audit >/dev/null 2>&1; then
            bundle exec bundler-audit check --update || true
          else
            echo 'bundler-audit not present; skipping'
          fi

  frontend:
    name: Frontend (pnpm tests)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/frontend/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: pnpm install --frozen-lockfile

      - name: Run frontend tests
        working-directory: ./frontend
        run: pnpm test -- --ci --reporters=default
