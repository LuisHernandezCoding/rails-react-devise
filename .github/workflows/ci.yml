name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main, integration]

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: backend_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-ruby
      - name: Cache Ruby gems
        uses: actions/cache@v4
        with:
          path: backend/vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('backend/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install backend gems
        run: |
          cd backend
          bundle config set --local path 'vendor/bundle'
          bundle install --jobs 4 --retry 3
        shell: bash
      - uses: ./.github/actions/run-backend-tests

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node
      - uses: ./.github/actions/run-frontend-tests

  lint:
    name: Lint and Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-ruby
      - name: Cache Ruby gems
        uses: actions/cache@v4
        with:
          path: backend/vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('backend/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install backend gems
        run: |
          cd backend
          bundle config set --local path 'vendor/bundle'
          bundle install --jobs 4 --retry 3
        shell: bash
      - uses: ./.github/actions/run-backend-linter
      - uses: ./.github/actions/run-bundler-audit
      - uses: ./.github/actions/setup-node
      - uses: ./.github/actions/run-frontend-linter
